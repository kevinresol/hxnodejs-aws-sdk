package aws_sdk.neptune;

typedef CreateEventSubscriptionMessage = {
	/**
		The name of the subscription. Constraints: The name must be less than 255 characters.
	**/
	var SubscriptionName : String;
	/**
		The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
	**/
	var SnsTopicArn : String;
	/**
		The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned. Valid values: db-instance | db-cluster | db-parameter-group | db-security-group | db-snapshot | db-cluster-snapshot
	**/
	@:optional
	var SourceType : String;
	/**
		A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType by using the DescribeEventCategories action.
	**/
	@:optional
	var EventCategories : EventCategoriesList;
	/**
		The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it can't end with a hyphen or contain two consecutive hyphens. Constraints:   If SourceIds are supplied, SourceType must also be provided.   If the source type is a DB instance, then a DBInstanceIdentifier must be supplied.   If the source type is a DB security group, a DBSecurityGroupName must be supplied.   If the source type is a DB parameter group, a DBParameterGroupName must be supplied.   If the source type is a DB snapshot, a DBSnapshotIdentifier must be supplied.
	**/
	@:optional
	var SourceIds : SourceIdsList;
	/**
		A Boolean value; set to true to activate the subscription, set to false to create the subscription but not active it.
	**/
	@:optional
	var Enabled : Bool;
	/**
		The tags to be applied to the new event subscription.
	**/
	@:optional
	var Tags : TagList;
};