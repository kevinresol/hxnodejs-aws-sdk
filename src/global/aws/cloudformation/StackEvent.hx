package global.aws.cloudformation;

typedef StackEvent = {
	/**
		The unique ID name of the instance of the stack.
	**/
	var StackId : String;
	/**
		The unique ID of this event.
	**/
	var EventId : String;
	/**
		The name associated with a stack.
	**/
	var StackName : String;
	/**
		The logical name of the resource specified in the template.
	**/
	@:optional
	var LogicalResourceId : String;
	/**
		The name or unique identifier associated with the physical instance of the resource.
	**/
	@:optional
	var PhysicalResourceId : String;
	/**
		Type of resource. (For more information, go to  AWS Resource Types Reference in the AWS CloudFormation User Guide.)
	**/
	@:optional
	var ResourceType : String;
	/**
		Time the status was updated.
	**/
	var Timestamp : js.lib.Date;
	/**
		Current status of the resource.
	**/
	@:optional
	var ResourceStatus : String;
	/**
		Success/failure message associated with the resource.
	**/
	@:optional
	var ResourceStatusReason : String;
	/**
		BLOB of the properties used to create the resource.
	**/
	@:optional
	var ResourceProperties : String;
	/**
		The token passed to the operation that generated this event. All events triggered by a given stack operation are assigned the same client request token, which you can use to track operations. For example, if you execute a CreateStack operation with the token token1, then all the StackEvents generated by that operation will have ClientRequestToken set as token1. In the console, stack operations display the client request token on the Events tab. Stack operations that are initiated from the console use the token format Console-StackOperation-ID, which helps you easily identify the stack operation . For example, if you create a stack using the console, each stack event would be assigned the same token in the following format: Console-CreateStack-7f59c3cf-00d2-40c7-b2ff-e75db0987002.
	**/
	@:optional
	var ClientRequestToken : String;
};