package global.aws.robomaker;

typedef SimulationJob = {
	/**
		The Amazon Resource Name (ARN) of the simulation job.
	**/
	@:optional
	var arn : String;
	/**
		The name of the simulation job.
	**/
	@:optional
	var name : String;
	/**
		Status of the simulation job.
	**/
	@:optional
	var status : String;
	/**
		The time, in milliseconds since the epoch, when the simulation job was last started.
	**/
	@:optional
	var lastStartedAt : js.lib.Date;
	/**
		The time, in milliseconds since the epoch, when the simulation job was last updated.
	**/
	@:optional
	var lastUpdatedAt : js.lib.Date;
	/**
		The failure behavior the simulation job.  Continue  Restart the simulation job in the same host instance.  Fail  Stop the simulation job and terminate the instance.
	**/
	@:optional
	var failureBehavior : String;
	/**
		The failure code of the simulation job if it failed.
	**/
	@:optional
	var failureCode : String;
	/**
		The reason why the simulation job failed.
	**/
	@:optional
	var failureReason : String;
	/**
		A unique identifier for this SimulationJob request.
	**/
	@:optional
	var clientRequestToken : String;
	/**
		Location for output files generated by the simulation job.
	**/
	@:optional
	var outputLocation : OutputLocation;
	/**
		The logging configuration.
	**/
	@:optional
	var loggingConfig : LoggingConfig;
	/**
		The maximum simulation job duration in seconds. The value must be 8 days (691,200 seconds) or less.
	**/
	@:optional
	var maxJobDurationInSeconds : Float;
	/**
		The simulation job execution duration in milliseconds.
	**/
	@:optional
	var simulationTimeMillis : Float;
	/**
		The IAM role that allows the simulation instance to call the AWS APIs that are specified in its associated policies on your behalf. This is how credentials are passed in to your simulation job.
	**/
	@:optional
	var iamRole : String;
	/**
		A list of robot applications.
	**/
	@:optional
	var robotApplications : RobotApplicationConfigs;
	/**
		A list of simulation applications.
	**/
	@:optional
	var simulationApplications : SimulationApplicationConfigs;
	/**
		The data sources for the simulation job.
	**/
	@:optional
	var dataSources : DataSources;
	/**
		A map that contains tag keys and tag values that are attached to the simulation job.
	**/
	@:optional
	var tags : TagMap;
	/**
		VPC configuration information.
	**/
	@:optional
	var vpcConfig : VPCConfigResponse;
	/**
		Information about a network interface.
	**/
	@:optional
	var networkInterface : NetworkInterface;
	/**
		Compute information for the simulation job
	**/
	@:optional
	var compute : ComputeResponse;
};