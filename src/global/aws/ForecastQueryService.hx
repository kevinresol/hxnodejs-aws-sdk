package global.aws;

@:native("AWS.ForecastQueryService") extern class ForecastQueryService extends Service {
	/**
		Constructs a service object. This object has one method for each API operation.
	**/
	function new(?options:global.aws.forecastqueryservice.ClientConfiguration);
	/**
		Retrieves a forecast for a single item, filtered by the supplied criteria. The criteria is a key-value pair. The key is either item_id (or the equivalent non-timestamp, non-target field) from the TARGET_TIME_SERIES dataset, or one of the forecast dimensions specified as part of the FeaturizationConfig object. By default, QueryForecast returns the complete date range for the filtered forecast. You can request a specific date range. To get the full forecast, use the CreateForecastExportJob operation.  The forecasts generated by Amazon Forecast are in the same timezone as the dataset that was used to create the predictor.
		
		Retrieves a forecast for a single item, filtered by the supplied criteria. The criteria is a key-value pair. The key is either item_id (or the equivalent non-timestamp, non-target field) from the TARGET_TIME_SERIES dataset, or one of the forecast dimensions specified as part of the FeaturizationConfig object. By default, QueryForecast returns the complete date range for the filtered forecast. You can request a specific date range. To get the full forecast, use the CreateForecastExportJob operation.  The forecasts generated by Amazon Forecast are in the same timezone as the dataset that was used to create the predictor.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.forecastqueryservice.QueryForecastResponse) -> Void):Request<global.aws.forecastqueryservice.QueryForecastResponse, AWSError> { })
	function queryForecast(params:global.aws.forecastqueryservice.QueryForecastRequest, ?callback:(err:AWSError, data:global.aws.forecastqueryservice.QueryForecastResponse) -> Void):Request<global.aws.forecastqueryservice.QueryForecastResponse, AWSError>;
	static var prototype : ForecastQueryService;
}