package global.aws;

@:native("AWS.AccessAnalyzer") extern class AccessAnalyzer extends Service {
	/**
		Constructs a service object. This object has one method for each API operation.
	**/
	function new(?options:global.aws.accessanalyzer.ClientConfiguration);
	/**
		Creates an analyzer for your account.
		
		Creates an analyzer for your account.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.CreateAnalyzerResponse) -> Void):Request<global.aws.accessanalyzer.CreateAnalyzerResponse, AWSError> { })
	function createAnalyzer(params:global.aws.accessanalyzer.CreateAnalyzerRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.CreateAnalyzerResponse) -> Void):Request<global.aws.accessanalyzer.CreateAnalyzerResponse, AWSError>;
	/**
		Creates an archive rule for the specified analyzer. Archive rules automatically archive findings that meet the criteria you define when you create the rule.
		
		Creates an archive rule for the specified analyzer. Archive rules automatically archive findings that meet the criteria you define when you create the rule.
	**/
	@:overload(function(?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError> { })
	function createArchiveRule(params:global.aws.accessanalyzer.CreateArchiveRuleRequest, ?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError>;
	/**
		Deletes the specified analyzer. When you delete an analyzer, Access Analyzer is disabled for the account in the current or specific Region. All findings that were generated by the analyzer are deleted. You cannot undo this action.
		
		Deletes the specified analyzer. When you delete an analyzer, Access Analyzer is disabled for the account in the current or specific Region. All findings that were generated by the analyzer are deleted. You cannot undo this action.
	**/
	@:overload(function(?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError> { })
	function deleteAnalyzer(params:global.aws.accessanalyzer.DeleteAnalyzerRequest, ?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError>;
	/**
		Deletes the specified archive rule.
		
		Deletes the specified archive rule.
	**/
	@:overload(function(?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError> { })
	function deleteArchiveRule(params:global.aws.accessanalyzer.DeleteArchiveRuleRequest, ?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError>;
	/**
		Retrieves information about a resource that was analyzed.
		
		Retrieves information about a resource that was analyzed.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.GetAnalyzedResourceResponse) -> Void):Request<global.aws.accessanalyzer.GetAnalyzedResourceResponse, AWSError> { })
	function getAnalyzedResource(params:global.aws.accessanalyzer.GetAnalyzedResourceRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.GetAnalyzedResourceResponse) -> Void):Request<global.aws.accessanalyzer.GetAnalyzedResourceResponse, AWSError>;
	/**
		Retrieves information about the specified analyzer.
		
		Retrieves information about the specified analyzer.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.GetAnalyzerResponse) -> Void):Request<global.aws.accessanalyzer.GetAnalyzerResponse, AWSError> { })
	function getAnalyzer(params:global.aws.accessanalyzer.GetAnalyzerRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.GetAnalyzerResponse) -> Void):Request<global.aws.accessanalyzer.GetAnalyzerResponse, AWSError>;
	/**
		Retrieves information about an archive rule.
		
		Retrieves information about an archive rule.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.GetArchiveRuleResponse) -> Void):Request<global.aws.accessanalyzer.GetArchiveRuleResponse, AWSError> { })
	function getArchiveRule(params:global.aws.accessanalyzer.GetArchiveRuleRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.GetArchiveRuleResponse) -> Void):Request<global.aws.accessanalyzer.GetArchiveRuleResponse, AWSError>;
	/**
		Retrieves information about the specified finding.
		
		Retrieves information about the specified finding.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.GetFindingResponse) -> Void):Request<global.aws.accessanalyzer.GetFindingResponse, AWSError> { })
	function getFinding(params:global.aws.accessanalyzer.GetFindingRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.GetFindingResponse) -> Void):Request<global.aws.accessanalyzer.GetFindingResponse, AWSError>;
	/**
		Retrieves a list of resources of the specified type that have been analyzed by the specified analyzer..
		
		Retrieves a list of resources of the specified type that have been analyzed by the specified analyzer..
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.ListAnalyzedResourcesResponse) -> Void):Request<global.aws.accessanalyzer.ListAnalyzedResourcesResponse, AWSError> { })
	function listAnalyzedResources(params:global.aws.accessanalyzer.ListAnalyzedResourcesRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.ListAnalyzedResourcesResponse) -> Void):Request<global.aws.accessanalyzer.ListAnalyzedResourcesResponse, AWSError>;
	/**
		Retrieves a list of analyzers.
		
		Retrieves a list of analyzers.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.ListAnalyzersResponse) -> Void):Request<global.aws.accessanalyzer.ListAnalyzersResponse, AWSError> { })
	function listAnalyzers(params:global.aws.accessanalyzer.ListAnalyzersRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.ListAnalyzersResponse) -> Void):Request<global.aws.accessanalyzer.ListAnalyzersResponse, AWSError>;
	/**
		Retrieves a list of archive rules created for the specified analyzer.
		
		Retrieves a list of archive rules created for the specified analyzer.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.ListArchiveRulesResponse) -> Void):Request<global.aws.accessanalyzer.ListArchiveRulesResponse, AWSError> { })
	function listArchiveRules(params:global.aws.accessanalyzer.ListArchiveRulesRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.ListArchiveRulesResponse) -> Void):Request<global.aws.accessanalyzer.ListArchiveRulesResponse, AWSError>;
	/**
		Retrieves a list of findings generated by the specified analyzer.
		
		Retrieves a list of findings generated by the specified analyzer.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.ListFindingsResponse) -> Void):Request<global.aws.accessanalyzer.ListFindingsResponse, AWSError> { })
	function listFindings(params:global.aws.accessanalyzer.ListFindingsRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.ListFindingsResponse) -> Void):Request<global.aws.accessanalyzer.ListFindingsResponse, AWSError>;
	/**
		Retrieves a list of tags applied to the specified resource.
		
		Retrieves a list of tags applied to the specified resource.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.ListTagsForResourceResponse) -> Void):Request<global.aws.accessanalyzer.ListTagsForResourceResponse, AWSError> { })
	function listTagsForResource(params:global.aws.accessanalyzer.ListTagsForResourceRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.ListTagsForResourceResponse) -> Void):Request<global.aws.accessanalyzer.ListTagsForResourceResponse, AWSError>;
	/**
		Immediately starts a scan of the policies applied to the specified resource.
		
		Immediately starts a scan of the policies applied to the specified resource.
	**/
	@:overload(function(?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError> { })
	function startResourceScan(params:global.aws.accessanalyzer.StartResourceScanRequest, ?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError>;
	/**
		Adds a tag to the specified resource.
		
		Adds a tag to the specified resource.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.TagResourceResponse) -> Void):Request<global.aws.accessanalyzer.TagResourceResponse, AWSError> { })
	function tagResource(params:global.aws.accessanalyzer.TagResourceRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.TagResourceResponse) -> Void):Request<global.aws.accessanalyzer.TagResourceResponse, AWSError>;
	/**
		Removes a tag from the specified resource.
		
		Removes a tag from the specified resource.
	**/
	@:overload(function(?callback:(err:AWSError, data:global.aws.accessanalyzer.UntagResourceResponse) -> Void):Request<global.aws.accessanalyzer.UntagResourceResponse, AWSError> { })
	function untagResource(params:global.aws.accessanalyzer.UntagResourceRequest, ?callback:(err:AWSError, data:global.aws.accessanalyzer.UntagResourceResponse) -> Void):Request<global.aws.accessanalyzer.UntagResourceResponse, AWSError>;
	/**
		Updates the criteria and values for the specified archive rule.
		
		Updates the criteria and values for the specified archive rule.
	**/
	@:overload(function(?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError> { })
	function updateArchiveRule(params:global.aws.accessanalyzer.UpdateArchiveRuleRequest, ?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError>;
	/**
		Updates the status for the specified findings.
		
		Updates the status for the specified findings.
	**/
	@:overload(function(?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError> { })
	function updateFindings(params:global.aws.accessanalyzer.UpdateFindingsRequest, ?callback:(err:AWSError, data:{ }) -> Void):Request<{ }, AWSError>;
	static var prototype : AccessAnalyzer;
}